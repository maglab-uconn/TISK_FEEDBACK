library(reshape2)
library(data.table)
library(ggplot2)
library(plyr) 
library(foreach) 
library(gridExtra)
library(Rmisc)
source("../../ANALYSIS/trace_handling_functions.2013.12.01.R")
#shapeValues  = c(14, 15, 16, 17, 18, 19, 14,15, 16, 17)
shapeValues  = c(16, 
                 0, 20, 20, 20,
                 24, 25,
                 2, 20, 20, 20,
                 5, 18,
                 27)
colourValues  = c("#000000", 
                  "red", "firebrick", "firebrick1","salmon", # cohorts
                  "darkolivegreen", "darkgreen", # rhymes
                  "blue", "royalblue", "dodgerblue", "dodgerblue4", # neighbors
                  "purple", "darkviolet", # embeds
                  "#000000") # mean of all

otm <- proc.time()


#target,cohort, shortcoh, samecoh, longcoh, rhy1, rhy2, dels, adds,subs,semb, emb, mean_of_all


actThresh = 0.35;
rpThresh = 0.5; # 0.9 in FP98                                                                                                                                                                                                                                            


# for every file with timecourse in the name
baseDir ="../Results/Basic_Data/"
setwd(baseDir)
bob=""
tcs = dir()[grep("cmpTimecourse.txt$",dir(), perl = TRUE)]
at = 0
foreach(atc=tcs)%do%{
  at = at + 1
  print(paste(at, "***********************************", atc))
}

relSize = 1

foreach(atc=tcs)%do%{
  plotList <- list()
  plotList.rp <- list()
  
  ptm <- proc.time()
  adat <- as.data.frame(fread(atc))
  names(adat)=c("Word", "Cycle", "Type", "Value");
  
  foreach(awrd=unique(adat$Word))%do%{
    this.word = subset(adat,Word==awrd)
    
    plotTitle = paste(awrd)
    #reorder(this.tc$Item, this.tc$Rank)
    aggplot <- ggplot(this.word,aes(Cycle,Value,color=Type, shape=Type)) + 
      geom_line(aes(label=Type)) + 
      xlab("Time (TISK processing cycles)") + ylab("Activation") +
      #    scale_x_continuous(limits = c(-5, 120)) + #, breaks=c(0,10,20,30)) +
      scale_y_continuous(limits = c(-0.025, 0.6)) + #scale_shape_discrete(solid=T) + #geom_point(shape = a)
      geom_point(size=rel(2)) +
      #  scale_fill_discrete(name="Noise level") +
      scale_shape_manual(values=shapeValues) +                  # Change shapes
      scale_colour_manual(values=colourValues) + 
      #  scale_linetype_manual(values=c(rep("solid",17))) + 
      theme(axis.text.x = element_text(size=rel(relSize), face="plain"),
            axis.text.y = element_text(size=rel(relSize), face="plain"),
            axis.title.x = element_text(size=rel(relSize), face="bold"),
            axis.title.y = element_text(size=rel(relSize), face="bold"),
            title=element_text(size=rel(relSize)),
            legend.title = element_blank(),
            legend.text = element_text(size = rel(relSize)), 
            legend.title = element_blank(),
            #         legend.position = c(.1,.7),
            strip.text.x = element_text(size=rel(1.5)),
            legend.background = element_rect(colour = "black"),
            plot.title = element_text(size = rel(relSize)) )  + 
      ggtitle(plotTitle)
    
    plotList[[length(plotList) + 1]] <- aggplot
    print((proc.time() - ptm))
    
    
  }
  ggplot_build(aggplot)$data
  #filePre = paste0(paste(alex,paste0("wp",awp),paste0("gsd",agsd),sep="_"))
  pagePlotter(plotList,wid=22,hei=17,filename=paste0(atc,"_cmpTimecoursePlots.pdf"))
  
  #  write.table(row.names=FALSE, x=winners,file=paste0(filePre,"_tisk_activation_winners.txt"),quote=F, sep="\t")
  #  write.table(row.names=FALSE, x=winners.l,file=paste0(filePre,"_trace_rp_winners.txt"),quote=F, sep="\t")
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
#                   select from here for timecourse data                      #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
shapeValues  = c(16, 15, # target, cohort
                 24, # rhy1, rhy2
                 17, # neighbors
                 18, 23, # embed, ex-embed
                 3)
colourValues  = c("#000000", "red", 
                  "darkolivegreen",  # rhymes
                  "blue",  # neighbors
                  "purple", "darkviolet", # embeds
                  "#000000") # mean of all

ylims=c(-0.005,0.61)
plotTitle = "TISKfb"
atc="Feedback_Word_Activation_Data.txt_TISKOUT_cmpTimecourse.txt"
alldat <- as.data.frame(fread(atc))
names(alldat)=c("Word", "Cycle", "Type", "Value");
#adat=subset(alldat,(Type == "0.Target" | Type == "1.Cohorts" | Type == "2a.Rhyme1" | Type == "2b.Rhyme2" | 
#                      Type == "3.Neighbors" | Type == "4a.Embeddings" | Type == "4b.ex-Embeds" | Type == "x.Mean"))
adat=subset(alldat,(Type == "0.Target" | Type == "1.Cohorts" | Type == "2a.Rhyme1" | 
                      Type == "3.Neighbors" | Type == "4a.Embeddings" | Type == "4b.ex-Embeds" | Type == "x.Mean"))
adat$Type = as.factor(adat$Type)
levels(adat$Type)=c("Target", "Cohorts", "Rhyme1",  "Neighbors", "Embeddings", "ex-Embeds", "Baseline")


overall<-summarySE(data=adat, measurevar="Value", groupvars=c("Cycle","Type"))
overall<-subset(summarySE(data=adat, measurevar="Value", groupvars=c("Cycle","Type")), Cycle %% 5 == 0)
plotTitle = "Mean time course by type (x.Mean = mean of all items, proxy baseline)"
#reorder(this.tc$Item, this.tc$Rank)
ylims

TISK11overallplot <- ggplot(overall,aes(Cycle,Value,color=Type, shape=Type)) + 
  geom_line(aes(label=Type)) + 
  xlab("Time (processing cycles)") + ylab("Activation") +
  #    scale_x_continuous(limits = c(-5, 120)) + #, breaks=c(0,10,20,30)) +
  scale_y_continuous(limits = ylims) + #scale_shape_discrete(solid=T) + #geom_point(shape = a)
  geom_point(size=rel(3)) +
  #  scale_fill_discrete(name="Noise level") +
  scale_shape_manual(values=shapeValues) +                  # Change shapes
  scale_colour_manual(values=colourValues) + 
  #  scale_linetype_manual(values=c(rep("solid",17))) + 
  #     theme(axis.text.x = element_text(size=rel(relSize), face="plain"),
  #           axis.text.y = element_text(size=rel(relSize), face="plain"),
  #           axis.title.x = element_text(size=rel(relSize), face="bold"),
  #           axis.title.y = element_text(size=rel(relSize), face="bold"),
  #           title=element_text(size=rel(relSize)),
  #           legend.text = element_text(size = rel(relSize)), 
  #           legend.title = element_blank(),
  #           #         legend.position = c(.1,.7),
  #           strip.text.x = element_text(size=rel(1.5)),
  #           legend.background = element_rect(colour = "black"),
#           plot.title = element_text(size = rel(relSize)) )  + 
theme(panel.background = element_rect(colour="black", fill="white"),
      axis.text.x = element_text(size=16, face="plain", colour="black"),
      axis.text.y = element_text(size=20, face="plain", colour="black"),
      axis.title.x = element_text(size=20, face="bold", colour="black", vjust=-.4),
      axis.title.y = element_text(size=20, face="bold", colour="black", vjust=1),
      strip.text.x = element_text(size =20),
      title=element_text(size=20),
      plot.title = element_text(margin = margin(b = -25), hjust = 0.5, size=20),
      legend.title = element_blank(),
      legend.text = element_text(size = 15), 
      legend.position = c(.17,.7),
      legend.background = element_rect(fill="white", colour="black"),
      legend.key = element_blank()) + 
  ggtitle("TISKfb")


plotTitle = "TISK"
atc="Original_0_Intact_Word_Activation_Data.txt_TISKOUT_cmpTimecourse.txt"
alldat <- as.data.frame(fread(atc))
names(alldat)=c("Word", "Cycle", "Type", "Value");
adat=subset(alldat,(Type == "0.Target" | Type == "1.Cohorts" | Type == "2a.Rhyme1" | Type == "2b.Rhyme2" | 
                      Type == "3.Neighbors" | Type == "4a.Embeddings" | Type == "4b.ex-Embeds" | Type == "x.Mean"))
adat=subset(alldat,(Type == "0.Target" | Type == "1.Cohorts" | Type == "2a.Rhyme1" | 
                      Type == "3.Neighbors" | Type == "4a.Embeddings" | Type == "4b.ex-Embeds" | Type == "x.Mean"))
adat$Type = as.factor(adat$Type)
levels(adat$Type)=c("Target", "Cohorts", "Rhyme1", "Neighbors", "Embeddings", "ex-Embeds", "Baseline")

overall<-summarySE(data=adat, measurevar="Value", groupvars=c("Cycle","Type"))
overall<-subset(summarySE(data=adat, measurevar="Value", groupvars=c("Cycle","Type")), Cycle %% 5 == 0)
plotTitle = "Mean time course by type (x.Mean = mean of all items, proxy baseline)"
#reorder(this.tc$Item, this.tc$Rank)
TISK10overallplot <- ggplot(overall,aes(Cycle,Value,color=Type, shape=Type)) + 
  geom_line(aes(label=Type)) + 
  xlab("Time (TISK processing cycles)") + ylab("Activation") +
  #    scale_x_continuous(limits = c(-5, 120)) + #, breaks=c(0,10,20,30)) +
  scale_y_continuous(limits = ylims) + #scale_shape_discrete(solid=T) + #geom_point(shape = a)
  geom_point(size=rel(3)) +
  #  scale_fill_discrete(name="Noise level") +
  scale_shape_manual(values=shapeValues) +                  # Change shapes
  scale_colour_manual(values=colourValues) + 
  #  scale_linetype_manual(values=c(rep("solid",17))) + 
  #     theme(axis.text.x = element_text(size=rel(relSize), face="plain"),
  #           axis.text.y = element_text(size=rel(relSize), face="plain"),
  #           axis.title.x = element_text(size=rel(relSize), face="bold"),
  #           axis.title.y = element_text(size=rel(relSize), face="bold"),
  #           title=element_text(size=rel(relSize)),
  #           legend.text = element_text(size = rel(relSize)), 
  #           legend.title = element_blank(),
  #           #         legend.position = c(.1,.7),
  #           strip.text.x = element_text(size=rel(1.5)),
  #           legend.background = element_rect(colour = "black"),
#           plot.title = element_text(size = rel(relSize)) )  + 
theme(panel.background = element_rect(colour="black", fill="white"),
      axis.text.x = element_text(size=16, face="plain", colour="black"),
      axis.text.y = element_text(size=20, face="plain", colour="black"),
#      axis.title.x = element_text(size=20, face="bold", colour="black", vjust=-.4),
      axis.title.x = element_blank(),
      axis.title.y = element_text(size=20, face="bold", colour="black", vjust=1),
      strip.text.x = element_text(size =20),
      title=element_text(size=20),
      legend.title = element_blank(),
      plot.title = element_text(margin = margin(b = -25), hjust = 0.5, size=20),
      plot.margin=unit(c(5.5,5.5,15,5.5),"pt"),
      legend.text = element_text(size = 15), 
      legend.position = c(.17,.7),
      legend.background = element_rect(fill="white", colour="black"),
      legend.key = element_blank()) + 
  ggtitle("TISK (without feedback)")


ylims=c(-0.205,0.61)
plotTitle = "TRACE"
atc="trace_original.TRACEOUT_cmpTimecourse.txt"
alldat <- as.data.frame(fread(atc))
names(alldat)=c("Word", "Cycle", "Type", "Value");
alldat$Value = alldat$Value * .01
adat=subset(alldat,(Type == "0.Target" | Type == "1.Cohorts" | Type == "2a.Rhyme1" | Type == "2b.Rhyme2" | 
                      Type == "3.Neighbors" | Type == "4a.Embeddings" | Type == "4b.ex-Embeds" | Type == "x.Mean"))
adat=subset(alldat,(Type == "0.Target" | Type == "1.Cohorts" | Type == "2a.Rhyme1" | 
                      Type == "3.Neighbors" | Type == "4a.Embeddings" | Type == "4b.ex-Embeds" | Type == "x.Mean"))
adat$Type = as.factor(adat$Type)
levels(adat$Type)=c("Target", "Cohorts", "Rhyme1", "Neighbors", "Embeddings", "ex-Embeds", "Baseline")

overall<-subset(summarySE(data=adat, measurevar="Value", groupvars=c("Cycle","Type")), Cycle %% 5 == 0)
plotTitle = "Mean time course by type (x.Mean = mean of all items, proxy baseline)"
#reorder(this.tc$Item, this.tc$Rank)
TRACEoverallplot <- ggplot(overall,aes(Cycle,Value,color=Type, shape=Type)) + 
  geom_line(aes(label=Type)) + 
  xlab("Time (TRACE processing cycles)") + ylab("Activation") +
  #    scale_x_continuous(limits = c(-5, 120)) + #, breaks=c(0,10,20,30)) +
  scale_y_continuous(limits = ylims) + #scale_shape_discrete(solid=T) + #geom_point(shape = a)
  geom_point(size=rel(3)) +
  #  scale_fill_discrete(name="Noise level") +
  scale_shape_manual(values=shapeValues) +                  # Change shapes
  scale_colour_manual(values=colourValues) + 
  #  scale_linetype_manual(values=c(rep("solid",17))) + 
  #     theme(axis.text.x = element_text(size=rel(relSize), face="plain"),
  #           axis.text.y = element_text(size=rel(relSize), face="plain"),
  #           axis.title.x = element_text(size=rel(relSize), face="bold"),
  #           axis.title.y = element_text(size=rel(relSize), face="bold"),
  #           title=element_text(size=rel(relSize)),
  #           legend.text = element_text(size = rel(relSize)), 
  #           legend.title = element_blank(),
  #           #         legend.position = c(.1,.7),
  #           strip.text.x = element_text(size=rel(1.5)),
  #           legend.background = element_rect(colour = "black"),
#           plot.title = element_text(size = rel(relSize)) )  + 
theme(panel.background = element_rect(colour="black", fill="white"),
      axis.text.x = element_text(size=16, face="plain", colour="black"),
      axis.text.y = element_text(size=20, face="plain", colour="black"),
      axis.title.x = element_blank(),
#      axis.title.x = element_text(size=20, face="bold", colour="black", vjust=-.4),
      axis.title.y = element_text(size=20, face="bold", colour="black", vjust=1),
      strip.text.x = element_text(size =20),
      title=element_text(size=20),
      plot.title = element_text(margin = margin(b = -25), hjust = 0.5, size = 20),
      plot.margin=unit(c(5.5,5.5,15,5.5),"pt"),
      legend.title = element_blank(),
      legend.text = element_text(size = 15), 
      legend.position = c(.17,.7),
      legend.background = element_rect(fill="white", colour="black"),
      legend.key = element_blank()) + 
  ggtitle("TRACE")


pdf("overall_timecourse_by_cmp_type_tisk11_tisk10.pdf",width=6,height=15)
grid.arrange(TRACEoverallplot, TISK10overallplot, TISK11overallplot, ncol=1)
dev.off()
pdf("overall_timecourse_by_cmp_type_trace_tisk10_tisk11_landsacpe.pdf",width=20,height=7)
grid.arrange(TRACEoverallplot, TISK10overallplot, TISK11overallplot, ncol=3)
dev.off()
