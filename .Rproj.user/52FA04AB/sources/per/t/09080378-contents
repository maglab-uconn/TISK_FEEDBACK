library(foreach)
library(ggplot2)
#setwd("~/Dropbox/MAGNUSON/STUDENTS/HEEJO/TISK WITH FEEDBACK PROJECT/SCRIPTS_AND_PROCEDURE")
source("./ANALYSIS/trace_handling_functions.2015.12.01.R")

#source("my.pairscor_both_fits.R")
source("ANALYSIS/my.pairscor_both_fits_forPub.R")
# tisk11<-read.table("tisk1.1_slex_stats.txt", header=TRUE, na.strings = "NA")
# tisk10<-read.table("tisk1.0_slex_stats.txt", header=TRUE, na.strings = "NA")
# trace<-read.table("trace_slex.txt",header=TRUE,na.strings="NA")


tisk11<-read.table("LEXDIMS/tiskfb_slex.txt", header=TRUE, na.strings = "NA")
tisk10<-read.table("LEXDIMS/tisknofb_slex.txt", header=TRUE, na.strings = "NA")
trace<-read.table("TRACE_data/trace_slex.utxt",header=TRUE,na.strings="NA")

# replace zeroes in recognition data with NA to avoid problems
summary(tisk11)
summary(tisk10)
summary(trace)
names(tisk11)

names(trace)
names(tisk11)
names(tisk10)
#####################################################################################
plot.to.list <- function(dat, x.vars, x.names, y.vars, y.names, trimy=FALSE, trimx=FALSE, 
                         textsize=18, starting = -20, ending = 80, 
                         jitteramount=0.1, ...) {
  someplots <- list()
  at = 0
  foreach(xvar=x.vars, xname=x.names) %do% {
    foreach(yvar=y.vars,yname=y.names) %do% {
      acor = sprintf("%.3f",with(dat,cor(get(xvar),get(yvar)) ))
      at = at + 1
      thisplot <- 
        ggplot(dat,aes_string(x=xvar,y=yvar)) + 
        #      geom_point(alpha=.5,cex=3,color="grey1") +
        geom_jitter(position=position_jitter(jitteramount)) + 
        #geom_jitter(position = position_jitter(width = 0.1, height = 0.1)) +
        #geom_point(alpha=.5,cex=2,position="jitter",color="grey1") +
        #geom_abline(intercept=0,slope=1,color="grey") +
        #    coord_cartesian(ylim=c(starting, ending), xlim=c(starting,ending)) +
        geom_smooth(method='lm', se=TRUE) +
 #       coord_cartesian(ylim=c(starting, ending)) +
        scale_x_continuous(breaks= pretty_breaks()) +
        scale_y_continuous(limits=c(starting,ending), breaks=seq(starting,ending,20)) +
#        theme(plot.title = element_text(hjust = 1, vjust=1)) +
        theme(plot.title = element_text(margin = margin(b = -18), hjust = 0.5)) +
        theme(panel.background = element_rect(colour="black", fill="white"),
              axis.text.x = element_text(size=textsize, face="plain", colour="black"),
              axis.text.y = element_text(size=textsize, face="plain", colour="black"),
              axis.title.x = element_text(size=textsize, face="bold", colour="black", vjust=-.4),
              plot.title = element_text(size=textsize),
              axis.title.y = element_text(size=textsize, face="bold", colour="black", vjust=1)) +
        # title=element_text(size=textsize))
        #plot.title = element_text(size=8) +
        xlab(xname) + ylab(yname) + 
        #stat_smooth(method="lm", se=FALSE) + 
        #annotate("text", x=Inf, y=Inf, hjust=1.5, vjust=2,label=paste(acor),size=6)
        ggtitle(paste("r =",acor))
       if(at > 1 & trimy == TRUE){
         thisplot = thisplot + theme(axis.title.y = element_blank()) 
       }
      if(trimx == TRUE){
        thisplot = thisplot + theme(axis.title.x = element_blank()) 
      }
      someplots[[at]] <- thisplot
    }
  }
  return(someplots)
}
#####################################################################################
# set 1 item accuracy to .9 so that sd is not zero
#swr$linEmb <- log(swr$inEmb+1)
#swr$lexEmb <- log(swr$exEmb+1)
#swr$lr1 <- log(swr$rhy1+1)
#swr$lr2 <- log(swr$rhy2+1)


#setEPS()
#postscript("TRACEvsTISKcycRec.eps",width=4,height=11)
tisk10$logCdiffRt = log(tisk10$cdiffRt)
tisk10$logEmbed = log10(tisk10$embed+2)
tisk10$logExembed = log10(tisk10$exembed+2)
tisk10$logNbs = log10((tisk10$nbs+1.001))
tisk10$sqrtNbs = sqrt(tisk10$nbs)
tisk10$logCohs = log(tisk10$cohs+1.001)
tisk10$logRhy1 = log(tisk10$rhy1+1.001)
#my.pairscor(tisk10[c("len","logExembed","embed","nbs","adds","dels","subs","logCdiffRt")])

# pdf("Graphs/LexDims/tisk10_core_compare_log_notlog.pdf", width=12, height=12)
# my.pairscor(tisk10[c("cdiffRt","logCdiffRt", "embed", "logEmbed", "exembed", "logExembed", "cohs", "logCohs","nbs", "logNbs", "rhy1", "logRhy1")])
# dev.off()

# pdf("tisk10_core_compare.pdf", width=8, height=8)
# my.pairscor(tisk10[c("cdiffRt","logCdiffRt", "logEmbed", "logExembed", "logCohs","logNbs", "logRhy1")])
# dev.off()

tisk11$logCdiffRt = log(tisk11$cdiffRt)
tisk11$logEmbed = log10(tisk11$embed+2)
tisk11$logExembed = log10(tisk11$exembed+2)
tisk11$logNbs = log10((tisk11$nbs+1.001))
tisk11$sqrtNbs = sqrt(tisk11$nbs)
tisk11$logCohs = log(tisk11$cohs+1.001)
tisk11$logRhy1 = log(tisk11$rhy1+1.001)
#my.pairscor(tisk11[c("len","logExembed","embed","nbs","adds","dels","subs","logCdiffRt")])

# pdf("tisk11_core_compare_log_notlog.pdf", width=12, height=12)
# my.pairscor(tisk11[c("cdiffRt","logCdiffRt", "embed", "logEmbed", "exembed", "logExembed", "cohs", "logCohs","nbs", "logNbs", "rhy1", "logRhy1")])
# dev.off()

# pdf("tisk11_core_compare.pdf", width=8, height=8)
# my.pairscor(tisk11[c("cdiffRt","logCdiffRt", "logEmbed", "logExembed", "logCohs","logNbs", "logRhy1")])
# dev.off()



trace$logCdiffRt = log(trace$cdiffRt)
trace$logEmbed = log10(trace$embed+2)
trace$logExembed = log10(trace$exembed+2)
trace$logNbs = log10((trace$nbs+1.001))
trace$sqrtNbs = sqrt(trace$nbs)
trace$logCohs = log(trace$cohs+1.001)
trace$logRhy1 = log(trace$rhy1+1.001)
#my.pairscor(trace[c("len","logExembed","embed","nbs","adds","dels","subs","logCdiffRt")])

# pdf("trace_core_compare_log_notlog.pdf", width=12, height=12)
# my.pairscor(trace[c("cdiffRt","logCdiffRt", "embed", "logEmbed", "exembed", "logExembed", "cohs", "logCohs","nbs", "logNbs", "rhy1", "logRhy1")])
# dev.off()

# pdf("trace_core_compare.pdf", width=8, height=8)
# my.pairscor(trace[c("cdiffRt","logCdiffRt", "logEmbed", "logExembed", "logCohs","logNbs", "logRhy1")])
# dev.off()

newdat=as.data.frame(trace$cdiffRt)
newdat[,2]=tisk11$cdiffRt
newdat[,3]=tisk10$cdiffRt
names(newdat)=c("TRACE","TISKfb", "TISK")
my.pairscor(newdat)
scatdat=newdat[,c(2,3)]
#aggplot<-

starting=0
ending=91
textsize=20
tiskfb_tisk_plot <- 
  ggplot(newdat,aes(x=TISKfb,y=TISK)) + geom_point(alpha=.5,cex=3,position="jitter",color="grey1") +
  geom_abline(intercept=0,slope=1,color="grey") +
  coord_cartesian(ylim=c(starting, ending), xlim=c(starting,ending)) +
  geom_smooth(method='lm', se=TRUE, linetype="dashed") +
  theme(panel.background = element_rect(colour="black", fill="white"),
        axis.text.x = element_text(size=textsize, face="plain", colour="black"),
        axis.text.y = element_text(size=textsize, face="plain", colour="black"),
        axis.title.x = element_text(size=textsize, face="bold", colour="black", vjust=-.4),
        plot.title = element_text(size=11),
        axis.title.y = element_text(size=textsize, face="bold", colour="black", vjust=1))+
  # title=element_text(size=textsize))
  #plot.title = element_text(size=8) +
  xlab("RT (TISKfb cycles)") + ylab("RT (TISK cycles)") +
  #stat_smooth(method="lm", se=FALSE) + 
  annotate("text", x=20, y=80, label="r = 0.97",size=8)

tiskfb_trace_plot <- 
  ggplot(newdat,aes(x=TISKfb,y=TRACE)) + geom_point(alpha=.5,cex=3,position="jitter",color="grey1") +
  geom_abline(intercept=0,slope=1,color="grey") +
  coord_cartesian(ylim=c(starting, ending), xlim=c(starting,ending)) +
  geom_smooth(method='lm', se=TRUE, linetype="dashed") +
  theme(panel.background = element_rect(colour="black", fill="white"),
        axis.text.x = element_text(size=textsize, face="plain", colour="black"),
        axis.text.y = element_text(size=textsize, face="plain", colour="black"),
        axis.title.x = element_text(size=textsize, face="bold", colour="black", vjust=-.4),
        plot.title = element_text(size=11),
        axis.title.y = element_text(size=textsize, face="bold", colour="black", vjust=1))+
  # title=element_text(size=textsize))
  #plot.title = element_text(size=8) +
  xlab("RT (TISKfb cycles)") + ylab("RT (TRACE cycles)") +
  #stat_smooth(method="lm", se=FALSE) + 
  annotate("text", x=20, y=80, label="r = 0.84",size=8)

tisk_tiskfb_plot <- 
  ggplot(newdat,aes(x=TISK,y=TRACE)) + geom_point(alpha=.5,cex=3,position="jitter",color="grey1") +
  geom_abline(intercept=0,slope=1,color="grey") +
  coord_cartesian(ylim=c(starting, ending), xlim=c(starting,ending)) +
  geom_smooth(method='lm', se=TRUE, linetype="dashed") +
  theme(panel.background = element_rect(colour="black", fill="white"),
        axis.text.x = element_text(size=textsize, face="plain", colour="black"),
        axis.text.y = element_text(size=textsize, face="plain", colour="black"),
        axis.title.x = element_text(size=textsize, face="bold", colour="black", vjust=-.4),
        plot.title = element_text(size=11),
        axis.title.y = element_text(size=textsize, face="bold", colour="black", vjust=1))+
  # title=element_text(size=textsize))
  #plot.title = element_text(size=8) +
  xlab("RT (TISK cycles)") + ylab("RT (TRACE cycles)") + 
  #stat_smooth(method="lm", se=FALSE) + 
  annotate("text", x=20, y=80, label="r = 0.90",size=8)

pdf("Graphs/LexDims/fig06_compare_model_rts_rev.pdf",width=11,height=3.2)
multiplot(tiskfb_tisk_plot, tiskfb_trace_plot, tisk_tiskfb_plot, cols=3)
dev.off()



starting=0
ending=101
textsize=20
tiskfb_tisk_plot <- 
  ggplot(newdat,aes(x=TISKfb,y=TISK)) + geom_point(alpha=.5,cex=3,position="jitter",color="grey1") +
  geom_abline(intercept=0,slope=1,color="grey") +
  coord_cartesian(ylim=c(starting, ending), xlim=c(starting,ending)) +
  geom_smooth(method='lm', se=TRUE, linetype="dashed") +
  theme(panel.background = element_rect(colour="black", fill="white"),
        axis.text.x = element_text(size=textsize, face="plain", colour="black"),
        axis.text.y = element_text(size=textsize, face="plain", colour="black"),
        axis.title.x = element_text(size=textsize, face="bold", colour="black", vjust=-.4),
        plot.title = element_text(size=11),
        axis.title.y = element_text(size=textsize, face="bold", colour="black", vjust=1))+
  # title=element_text(size=textsize))
  #plot.title = element_text(size=8) +
  xlab("RT (TISKfb cycles)") + ylab("RT (TISK cycles)") +
  #stat_smooth(method="lm", se=FALSE) + 
  annotate("text", x=20, y=80, label="r = 0.97",size=8)

tiskfb_trace_plot <- 
  ggplot(newdat,aes(x=TISKfb,y=TRACE)) + geom_point(alpha=.5,cex=3,position="jitter",color="grey1") +
  geom_abline(intercept=0,slope=1,color="grey") +
  coord_cartesian(ylim=c(starting, ending), xlim=c(starting,ending)) +
  geom_smooth(method='lm', se=TRUE, linetype="dashed") +
  theme(panel.background = element_rect(colour="black", fill="white"),
        axis.text.x = element_text(size=textsize, face="plain", colour="black"),
        axis.text.y = element_text(size=textsize, face="plain", colour="black"),
        axis.title.x = element_text(size=textsize, face="bold", colour="black", vjust=-.4),
        plot.title = element_text(size=11),
        axis.title.y = element_text(size=textsize, face="bold", colour="black", vjust=1))+
  # title=element_text(size=textsize))
  #plot.title = element_text(size=8) +
  xlab("RT (TISKfb cycles)") + ylab("RT (TRACE cycles)") +
  #stat_smooth(method="lm", se=FALSE) + 
  annotate("text", x=20, y=80, label="r = 0.84",size=8)

tisk_tiskfb_plot <- 
  ggplot(newdat,aes(x=TISK,y=TRACE)) + geom_point(alpha=.5,cex=3,position="jitter",color="grey1") +
  geom_abline(intercept=0,slope=1,color="grey") +
  coord_cartesian(ylim=c(starting, ending), xlim=c(starting,ending)) +
  geom_smooth(method='lm', se=TRUE, linetype="dashed") +
  theme(panel.background = element_rect(colour="black", fill="white"),
        axis.text.x = element_text(size=textsize, face="plain", colour="black"),
        axis.text.y = element_text(size=textsize, face="plain", colour="black"),
        axis.title.x = element_text(size=textsize, face="bold", colour="black", vjust=-.4),
        plot.title = element_text(size=11),
        axis.title.y = element_text(size=textsize, face="bold", colour="black", vjust=1))+
  # title=element_text(size=textsize))
  #plot.title = element_text(size=8) +
  xlab("RT (TISK cycles)") + ylab("RT (TRACE cycles)") + 
  #stat_smooth(method="lm", se=FALSE) + 
  annotate("text", x=20, y=80, label="r = 0.90",size=8)

# pdf("compare_model_rts_smaller_rev.pdf",width=4,height=12)
# multiplot(tiskfb_tisk_plot, tiskfb_trace_plot, tisk_tiskfb_plot)
# dev.off()



#legpos = "bottomright"
# pdf("compare_tisk10_tisk11_trace_lexdims.pdf",width=14,height=6)
# #par(mfrow=c(6,2),mar=c(4.5,4.5,1,2))
# 
# # best previous try
par(mfrow=c(3,6),
#    oma = c(4,4,0,0),
    mar = c(2.4,2.4,0,0) + 0.2,
    oma = c(0,.5,0,0),
    mgp = c(1.4, .4, 0))

# par(mfrow=c(3,6),
#     oma=c(10,10,0,0) + 0.1,
#     mar=c(.5,.5,1,1) + 0.1,
#     mgp = c(1.5, .5, 0))

#yvalues = c("abzRt", "DiffRt", "cdiffRt")
yvalues = c("cdiffRt")
#xvalues = c("len", "logEmbed", "logExembed", "logCohs", "logNbs", "logRhy1")
xvalues = c("len", "embed", "cohs", "logExembed", "nbs", "rhy1")
xlabs = c("Length", "Embeddings", "Onset competitors (cohorts)", "log(ex-Embeddings)", "Neighbors (DAS)", "Rhyme-1")
#ylabs = c("Threshold RT", "Differential RT", "Time Diff RT")
ylabs = c("TRACE RT")
foreach(xvalue=xvalues, xlbl=xlabs) %do% {
  foreach(yvalue=yvalues, ylbl=ylabs) %do% {
    thedatatrace = subset(trace, (!is.na(trace[,xvalue]) & !is.na(trace[,yvalue])))
    if(xvalue != "len"){ ylbl = "" }
#    xlbl = ""
    xaxtval = 'n'
    yaxtval = 'n'
#     plot(jitter(thedatatrace[,xvalue]),jitter(thedatatrace[,yvalue]),
#          xlab=xlbl, ylab=ylbl,cex=.5, xaxt=xaxtval, yaxt=yaxtval)
    plot(jitter(thedatatrace[,xvalue]),jitter(thedatatrace[,yvalue]),
         xlab=xlbl, ylab=ylbl,cex=.5, cex.lab=1.4)
#    axis(side=1,labels=NA)
    #lines(lowess(thedatatrace[,xvalue],thedatatrace[,yvalue]))
#    abline(lm(thedatatrace[,yvalue] ~ thedatatrace[,xvalue]))
    abline(fit <- lm(thedatatrace[,yvalue] ~ thedatatrace[,xvalue]))
    legpos="topright"

    if(xvalue == "len" | xvalue == "embed" | xvalue == "cohs"){ legpos = "topleft"}
    legend(legpos, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)

  }
}
ylabs = c("TISK RT")
foreach(xvalue=xvalues, xlbl=xlabs) %do% {
	foreach(yvalue=yvalues, ylbl=ylabs) %do% {
	  if(xvalue != "len"){ ylbl = "" }
#	  xlbl = ""
	  thedata10 = subset(tisk10, (!is.na(tisk10[,xvalue]) & !is.na(tisk10[,yvalue])))
		plot(jitter(thedata10[,xvalue]),jitter(thedata10[,yvalue]), xlab=xlbl, ylab=ylbl,cex=.5, cex.lab=1.4)
#	   lines(lowess(thedata10[,xvalue],thedata10[,yvalue]))
#		abline(lm(thedata10[,yvalue] ~ thedata10[,xvalue]))
		abline(fit <- lm(thedata10[,yvalue] ~ thedata10[,xvalue]))
		legpos="topright"
		if(xvalue == "len" | xvalue == "embed" | xvalue == "cohs"){ legpos = "topleft"}
		legend(legpos, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)

	}
}
ylabs = c("TISK+feedback RT")
foreach(xvalue=xvalues, xlbl=xlabs) %do% {
  foreach(yvalue=yvalues, ylbl=ylabs) %do% {
    if(xvalue != "len"){ ylbl = "" }
    thedata11 = subset(tisk11, (!is.na(tisk11[,xvalue]) & !is.na(tisk11[,yvalue])))
    plot(jitter(thedata11[,xvalue]),jitter(thedata11[,yvalue]),
         xlab=xlbl, ylab=ylbl,cex=.5, cex.lab=1.4)
    #   lines(lowess(thedata11[,xvalue],thedata11[,yvalue]))
    abline(fit <- lm(thedata11[,yvalue] ~ thedata11[,xvalue]))
    legpos="topright"
    if(xvalue == "len" | xvalue == "embed" | xvalue == "cohs"){ legpos = "topleft"}
    #legend(x=-2, y=95, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
    legend(legpos, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
  }
}
# dev.off()

##################################################################################################################
# try this again with ggplot
##################################################################################################################

hh=3
ww=20
hhh=2.75
# DO TRACE
yvars = c("cdiffRt")
xvars = c("len", "embed", "cohs", "logExembed", "nbs", "rhy1")
xnames = c("Length", "Embeddings", "Onset competitors (cohorts)", "log(ex-Embeddings)", "Neighbors (DAS)", "Rhyme-1")
ynames = c("TRACE RT")
trace.scatter.plots = plot.to.list(dat=thedatatrace, x.vars=xvars, y.vars=yvars, x.names=xnames, y.names=ynames, trimy=TRUE, trimx=TRUE)
pdf("Graphs/LexDims/fig07a_trace_lexdims.pdf",height=hhh,width=ww)
multiplot(plotlist = trace.scatter.plots, cols=6)
dev.off()

# DO TISK10
thedata10 = subset(tisk10, (!is.na(tisk10[,xvalue]) & !is.na(tisk10[,yvalue])))
ynames = c("TISK RT")
tisk10.scatter.plots = plot.to.list(dat=thedata10, x.vars=xvars, y.vars=yvars, x.names=xnames, y.names=ynames, trimy=TRUE,trimx=TRUE)
pdf("Graphs/LexDims/fig07b_tisknofb_lexdims.pdf",height=hhh,width=ww)
multiplot(plotlist = tisk10.scatter.plots, cols=6)
dev.off()

# DO TISK11
thedata11 = subset(tisk11, (!is.na(tisk11[,xvalue]) & !is.na(tisk11[,yvalue])))
ynames = c("TISKfb RT")
tisk11.scatter.plots = plot.to.list(dat=thedata11, x.vars=xvars, y.vars=yvars, x.names=xnames, y.names=ynames, trimy=TRUE)
pdf("Graphs/LexDims/fig07c_tiskfb_lexdims.pdf",height=hh,width=ww)
multiplot(plotlist = tisk11.scatter.plots, cols=6)
dev.off()

#multiplot(plotlist = c(trace.scatter.plots, tisk10.scatter.plots, tisk11.scatter.plots), cols=6)







######################################
# LEX DIMS ATTEMPT AT PORTRAIT
######################################
#pdf("compare_tisk10_tisk11_trace_lexdims_PORTRAIT.pdf",width=6,height=9.5)
#par(mfrow=c(6,2),mar=c(4.5,4.5,1,2))

# best previous try
par(mfcol=c(6,3),
    #    oma = c(4,4,0,0),
    mar = c(2.4,2.4,0,0) + 0.2,
    oma = c(0,.5,0,0),
    mgp = c(1.4, .4, 0))

# par(mfrow=c(3,6),
#     oma=c(10,10,0,0) + 0.1,
#     mar=c(.5,.5,1,1) + 0.1,
#     mgp = c(1.5, .5, 0))

#yvalues = c("abzRt", "DiffRt", "cdiffRt")
yvalues = c("cdiffRt")
#xvalues = c("len", "logEmbed", "logExembed", "logCohs", "logNbs", "logRhy1")
xvalues = c("len", "embed", "cohs", "logExembed", "nbs", "rhy1")
xlabs = c("Length", "Embeddings", "Cohorts", "log(ex-Embeds)", "Neighbors (DAS)", "Rhyme-1")
#ylabs = c("Threshold RT", "Differential RT", "Time Diff RT")
ylabs = c("TRACE RT")
  foreach(yvalue=yvalues, ylbl=ylabs) %do% {
    foreach(xvalue=xvalues, xlbl=xlabs) %do% {
      thedatatrace = subset(trace, (!is.na(trace[,xvalue]) & !is.na(trace[,yvalue])))
  #  if(xvalue != "len"){ ylbl = "" }
    #    xlbl = ""
    xaxtval = 'n'
    yaxtval = 'n'
    #     plot(jitter(thedatatrace[,xvalue]),jitter(thedatatrace[,yvalue]),
    #          xlab=xlbl, ylab=ylbl,cex=.5, xaxt=xaxtval, yaxt=yaxtval)
    plot(jitter(thedatatrace[,xvalue]),jitter(thedatatrace[,yvalue]),
         xlab=xlbl, ylab=ylbl,cex=.5, cex.lab=1.4)
    #    axis(side=1,labels=NA)
    #lines(lowess(thedatatrace[,xvalue],thedatatrace[,yvalue]))
    #    abline(lm(thedatatrace[,yvalue] ~ thedatatrace[,xvalue]))
    abline(fit <- lm(thedatatrace[,yvalue] ~ thedatatrace[,xvalue]))
    legpos="topright"
    legins= -0.05
    if(xvalue == "len" | xvalue == "embed" | xvalue == "cohs"){ legpos = "topleft"; legins = -0.1}
    #legend(x=-2, y=95, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
    legend(legpos, inset=legins, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
    
  }
}
ylabs = c("TISK RT")
foreach(xvalue=xvalues, xlbl=xlabs) %do% {
  foreach(yvalue=yvalues, ylbl=ylabs) %do% {
   # if(xvalue != "len"){ ylbl = "" }
    #	  xlbl = ""
    thedata10 = subset(tisk10, (!is.na(tisk10[,xvalue]) & !is.na(tisk10[,yvalue])))
    plot(jitter(thedata10[,xvalue]),jitter(thedata10[,yvalue]),
         xlab=xlbl, ylab=ylbl,cex=.5, cex.lab=1.4)
    #	   lines(lowess(thedata10[,xvalue],thedata10[,yvalue]))
    #		abline(lm(thedata10[,yvalue] ~ thedata10[,xvalue]))
    abline(fit <- lm(thedata10[,yvalue] ~ thedata10[,xvalue]))
    legpos="topright"
    legins= -0.05
    if(xvalue == "len" | xvalue == "embed" | xvalue == "cohs"){ legpos = "topleft"; legins = -0.1}
    #legend(x=-2, y=95, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
    legend(legpos, inset=legins, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
    
  }
}
ylabs = c("TISKfb RT")
foreach(xvalue=xvalues, xlbl=xlabs) %do% {
  foreach(yvalue=yvalues, ylbl=ylabs) %do% {
   # if(xvalue != "len"){ ylbl = "" }
    thedata11 = subset(tisk11, (!is.na(tisk11[,xvalue]) & !is.na(tisk11[,yvalue])))
    plot(jitter(thedata11[,xvalue]),jitter(thedata11[,yvalue]),
         xlab=xlbl, ylab=ylbl,cex=.5, cex.lab=1.4)
    #   lines(lowess(thedata11[,xvalue],thedata11[,yvalue]))
    abline(fit <- lm(thedata11[,yvalue] ~ thedata11[,xvalue]))
    legpos="topright"
    legins= -0.05
    if(xvalue == "len" | xvalue == "embed" | xvalue == "cohs"){ legpos = "topleft"; legins = -0.1}
    #legend(x=-2, y=95, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
    legend(legpos, inset=legins, bty="n", legend=format(summary(fit)$adj.r.squared,digits=2), cex=1.8)
  }
}
#dev.off()
######################################








#pdf("copmare_rt_trace_tisk10_tisk11.pdf")
summary(fit)


#pdf("TISK1.1_scatters.pdf",width=5,height=11)
#par(mfrow=c(6,2),mar=c(4.5,4.5,1,2))
par(mfrow=c(8,3),mar=c(3,3,.5,1),mgp = c(1.5, .5, 0))
yvalues = c("abzRt", "DiffRt", "cdiffRt")
xvalues = c("len", "exembed", "embed", "cohs", "nbs", "dels", "adds", "subs")
xlabs = c("Length", "ex-Embed", "Embedded", "Onset competitors (cohorts)", "Neighbors (DAS)", "D nbs", "A nbs", "S nbs")
ylabs = c("Threshold RT", "Differential RT", "Time Diff RT")
library(foreach)
foreach(xvalue=xvalues, xlbl=xlabs) %do% {
  foreach(yvalue=yvalues, ylbl=ylabs) %do% {
    thedata = subset(tisk11, (!is.na(tisk11[,xvalue]) & !is.na(tisk11[,yvalue])))
    plot(jitter(thedata[,xvalue]),jitter(thedata[,yvalue]),
         xlab=xlbl, ylab=ylbl,cex=.5)
    lines(lowess(thedata[,xvalue],thedata[,yvalue]))
    plot(density(thedata[,yvalue]))
  }
}
#dev.off()


#setEPS()
#postscript("TRACExTISKcycleRTscatter.eps",width=4.5,height=4)


# None of this seems to work because there is no object 'swr'

# pdf("TRACExTISKcycleRTscatter.pdf",width=4.5,height=4)
# 
# #pdf("TRACEvsTISKcycRec.pdf",width=4,height=11)
# #par(mfrow=c(6,2),mar=c(4.5,4.5,1,2))
# par(mar=c(3,3,.5,1),mgp = c(1.5, .5, 0))
# yvalues = c("TRACEcycRec")
# xvalues = c("TISKcycRec")
# xlabs = c("TISK cycle RT")
# ylabs = c("TRACE cycle RT")
# library(foreach)
# foreach(xvalue=xvalues, xlbl=xlabs) %do% {
# 	foreach(yvalue=yvalues, ylbl=ylabs) %do% {
# 		thedata = subset(swr, (!is.na(swr[,xvalue]) & !is.na(swr[,yvalue])))
# 		plot(jitter(thedata[,xvalue]),jitter(thedata[,yvalue]),xlab=xlbl, ylab=ylbl,cex=.5)
# 	   abline(lm(thedata[,yvalue] ~ thedata[,xvalue]))
# 	}
# }
# dev.off()
# 
# 
